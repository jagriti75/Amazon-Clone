{"ast":null,"code":"var _jsxFileName = \"/home/jagriti/Desktop/clone/React-App/src/StateProvider.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useReducer } from 'react'; //prepares the datalayer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const StateContext = /*#__PURE__*/createContext(); //wrap our app and provide datalayer\n\nexport const StateProvider = ({\n  reducer,\n  initialState,\n  children\n}) => {\n  _s();\n\n  return /*#__PURE__*/_jsxDEV(StateContext.Provider, {\n    value: useReducer(reducer, initialState),\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}; //pull info from the data layer\n\n_s(StateProvider, \"skVOqNGrFQuDFh+lpttAJ2AZFeA=\");\n\n_c = StateProvider;\nexport const useStateValue = () => {\n  _s2();\n\n  return useContext(StateContext);\n};\n\n_s2(useStateValue, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"StateProvider\");","map":{"version":3,"sources":["/home/jagriti/Desktop/clone/React-App/src/StateProvider.js"],"names":["React","createContext","useContext","useReducer","StateContext","StateProvider","reducer","initialState","children","useStateValue"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAAgCC,UAAhC,EAA6CC,UAA7C,QAA8D,OAA9D,C,CAEA;;;AAEA,OAAO,MAAMC,YAAY,gBAAGH,aAAa,EAAlC,C,CAEP;;AAEA,OAAO,MAAMI,aAAa,GAAG,CAAC;AAACC,EAAAA,OAAD;AAAWC,EAAAA,YAAX;AAA0BC,EAAAA;AAA1B,CAAD;AAAA;;AAAA,sBACzB,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAIL,UAAU,CAACG,OAAD,EAAWC,YAAX,CAA1C;AAAA,cAAqEC;AAArE;AAAA;AAAA;AAAA;AAAA,UADyB;AAAA,CAAtB,C,CAGP;;GAHaH,a;;KAAAA,a;AAKb,OAAO,MAAMI,aAAa,GAAG;AAAA;;AAAA,SAAMP,UAAU,CAACE,YAAD,CAAhB;AAAA,CAAtB;;IAAMK,a","sourcesContent":["import React , {createContext , useContext , useReducer} from 'react';\n\n//prepares the datalayer\n\nexport const StateContext = createContext();\n\n//wrap our app and provide datalayer\n\nexport const StateProvider = ({reducer , initialState , children}) => (\n    <StateContext.Provider value = {useReducer(reducer , initialState)}>{children}</StateContext.Provider> );\n\n//pull info from the data layer\n\nexport const useStateValue = () => useContext(StateContext);"]},"metadata":{},"sourceType":"module"}