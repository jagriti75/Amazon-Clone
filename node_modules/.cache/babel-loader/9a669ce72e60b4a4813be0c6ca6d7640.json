{"ast":null,"code":"export const initialState = {\n  basket: [],\n  user: null\n};\nexport const getBasketTotal = basket => basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"SET_USER\":\n      return { ...state,\n        user: action.user\n      };\n\n    case \"ADD_TO_BASKET\":\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        //item exist in the basket, remove it\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product{id: ${action.id}} as it is not in the basket`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;","map":{"version":3,"sources":["/home/jagriti/Desktop/clone/React-App/src/reducer.js"],"names":["initialState","basket","user","getBasketTotal","reduce","amount","item","price","reducer","state","action","type","newBasket","index","findIndex","basketItem","id","splice","console","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE,EADgB;AAExBC,EAAAA,IAAI,EAAE;AAFkB,CAArB;AAKP,OAAO,MAAMC,cAAc,GAAIF,MAAD,IAAYA,MAAM,CAACG,MAAP,CAAc,CAACC,MAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,MAA7C,EAAqD,CAArD,CAAnC;;AAEP,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,UAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHP,QAAAA,IAAI,EAAEQ,MAAM,CAACR;AAFV,OAAP;;AAIJ,SAAK,eAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHR,QAAAA,MAAM,EAAE,CAAC,GAAGQ,KAAK,CAACR,MAAV,EAAkBS,MAAM,CAACJ,IAAzB;AAFL,OAAP;;AAIJ,SAAK,oBAAL;AACI,UAAIM,SAAS,GAAI,CAAC,GAAGH,KAAK,CAACR,MAAV,CAAjB;AACA,YAAMY,KAAK,GAAGJ,KAAK,CAACR,MAAN,CAAaa,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBN,MAAM,CAACM,EAAhE,CAAd;;AACA,UAAGH,KAAK,IAAI,CAAZ,EAAe;AACX;AACAD,QAAAA,SAAS,CAACK,MAAV,CAAiBJ,KAAjB,EAAwB,CAAxB;AACH,OAHD,MAGO;AACHK,QAAAA,OAAO,CAACC,IAAR,CACK,4BAA2BT,MAAM,CAACM,EAAG,8BAD1C;AAGH;;AACD,aAAM,EACF,GAAGP,KADD;AAEFR,QAAAA,MAAM,EAAEW;AAFN,OAAN;;AAIJ;AACI,aAAOH,KAAP;AA3BR;AA6BH;;AACD,eAAeD,OAAf","sourcesContent":["export const initialState = {\n    basket: [],\n    user: null\n}\n\nexport const getBasketTotal = (basket) => basket.reduce((amount, item) => item.price + amount, 0);\n\nfunction reducer(state, action) {\n    switch(action.type) {\n        case \"SET_USER\": \n            return {\n                ...state,\n                user: action.user\n            }\n        case \"ADD_TO_BASKET\":\n            return {\n                ...state, \n                basket: [...state.basket, action.item]\n            };\n        case 'REMOVE_FROM_BASKET':\n            let newBasket  = [...state.basket];\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id);\n            if(index >= 0) {\n                //item exist in the basket, remove it\n                newBasket.splice(index, 1) \n            } else {\n                console.warn (\n                    `Can't remove product{id: ${action.id}} as it is not in the basket`\n                );\n            }\n            return{\n                ...state,\n                basket: newBasket\n            };\n        default:\n            return state\n    }\n}\nexport default reducer;"]},"metadata":{},"sourceType":"module"}