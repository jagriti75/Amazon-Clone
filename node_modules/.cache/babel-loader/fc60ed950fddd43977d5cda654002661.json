{"ast":null,"code":"export const initialState = {\n  basket: []\n}; //selector\n\nexport const getBasketTotal = basket => basket === null || basket === void 0 ? void 0 : basket.reduce((amout, item) => item.price + amout, 0);\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n      let newBasket = [...state.basket];\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(\"Can't remove product {id : &{action.id}} as it's not in basket!\");\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/jagriti/Desktop/clone/React-App/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reduce","amout","item","price","reducer","state","action","type","index","findIndex","basketItem","id","newBasket","splice","console","warn"],"mappings":"AACA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAG;AADe,CAArB,C,CAIP;;AAEA,OAAO,MAAMC,cAAc,GAAID,MAAD,IAAYA,MAAZ,aAAYA,MAAZ,uBAAYA,MAAM,CAAEE,MAAR,CAAe,CAACC,KAAD,EAASC,IAAT,KAAkBA,IAAI,CAACC,KAAL,GAAaF,KAA9C,EAAoD,CAApD,CAAnC;;AAKP,MAAMG,OAAO,GAAG,CAACC,KAAD,EAASC,MAAT,KAAoB;AAEhC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,eAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHP,QAAAA,MAAM,EAAG,CAAC,GAAGO,KAAK,CAACP,MAAV,EAAmBQ,MAAM,CAACJ,IAA1B;AAFN,OAAP;;AAKJ,SAAK,oBAAL;AACI,YAAMM,KAAK,GAAGH,KAAK,CAACP,MAAN,CAAaW,SAAb,CACTC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBL,MAAM,CAACK,EAD/B,CAAd;AAIA,UAAIC,SAAS,GAAG,CAAC,GAAGP,KAAK,CAACP,MAAV,CAAhB;;AAEA,UAAGU,KAAK,IAAI,CAAZ,EAAc;AACVI,QAAAA,SAAS,CAACC,MAAV,CAAiBL,KAAjB,EAAuB,CAAvB;AACH,OAFD,MAEK;AACDM,QAAAA,OAAO,CAACC,IAAR,CACI,iEADJ;AAGH;;AACD,aAAO,EACH,GAAGV,KADA;AAEHP,QAAAA,MAAM,EAAGc;AAFN,OAAP;;AAKJ;AACI,aAAOP,KAAP;AA3BR;AA6BH,CA/BD;;AAiCA,eAAeD,OAAf","sourcesContent":["\nexport const initialState = {\n    basket : [],\n};\n\n//selector\n\nexport const getBasketTotal = (basket) => basket?.reduce((amout , item) => item.price + amout,0);\n\n\n\n\nconst reducer = (state , action) => {\n\n    switch(action.type){\n        case 'ADD_TO_BASKET':\n            return {\n                ...state , \n                basket : [...state.basket , action.item]\n            };\n\n        case 'REMOVE_FROM_BASKET':\n            const index = state.basket.findIndex(\n                (basketItem) => basketItem.id === action.id\n            );\n\n            let newBasket = [...state.basket];\n\n            if(index >= 0){\n                newBasket.splice(index,1);\n            }else{\n                console.warn(\n                    \"Can't remove product {id : &{action.id}} as it's not in basket!\"\n                )\n            }\n            return {\n                ...state ,\n                basket : newBasket\n            }\n        \n        default:\n            return state;   \n    }\n}\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}